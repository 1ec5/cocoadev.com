I helped create Macster, the first and later official Napster client for the Mac. My main contribution was reverse engineering the Napster protocol and writing the networking code using an General/EtherPeek log. I have also reverse engineered a few other things including the Hotline and KDX protocols, and the Apple80211.h file. The latter brings up a story which begs to be told.

The first year (1999?) the General/BlackholeMedia crew and the General/PanicInc crew and General/LaddVanTol from General/VersionTracker all met at WWDC began a tradition: The General/UselessAppsContest. The idea became to hack together an app almost entirely from code written inside WWDC sessions. It started when Panic created a spoof of Stuffit Expander called Sittig Expander, which featured a picture of General/AaronSittig's head and every time you dragged an icon onto his head it would get bigger and bigger. We (General/BlackholeMedia) responded with Chia Cabel, which had a picture of Cabel starting with a totally bald head and a slider that would gradually add more hair until he had a giant afro with a hair pick, at which point it would play the finished burning *ding* audio clip from Toast. Apple would have been very proud of us because both of these apps were Carbonized and took advantage of new Mac General/APIs! The following years saw such entries as General/DocktasticPro from General/LaddVanTol, MP3Calculator A skinable calculator that was always off by one and also played mp3s from Blackhole Media, an X-rated Quartz compositing app from Panic, which also used a picture of Aaron's head, a Text Clipping Viewer by Blackhole Media, what eventually became Desktastic by Panic, and fianlly Jagwireless by Blackhole Media, which brings us back to the point of this story. During the 2001 WWDC keynote, a lot of people were using the "Create Network..." feature of the Airport software to make funny names and effectively chat. So I decided that our entry to the Useless Apps Contest that year would be a chat app that used custom network names to broadcast wireless chat. The name is also a play on the way General/SteveJobs pronounces Jaguar (Jagwire). In order to accomplish this, I needed to be able to control the Airport Card in the same way Apple was able to. After a bit of digging I discovered the private Apple80211.framework. I then used gdb, otool, and nm to figure out which functions inside the framework were being called and what arguments each one required. After completing Jagwireless, I sent my work to Korben in the form of the Apple80211.h file, which eventually made its way into Mac Stumbler and many other projects: General/AppleEightOhTwoEleven.

These days I don't use the Mac much, I am more interested in General/GentooLinux and Python, although I still use General/PyObjC sometimes on my old cracked Titanium General/PowerBook. I have found Python to be the best programming language for almost all of my needs. Twisted http://twistedmatrix.com is by far my favorite way of writing networked apps now. wxPython http://www.wxpython.org provides a decent cross-platform gui library, although it still leaves much to be desired on the Mac. The good news though is that writing a custom gui layer for every OS and abstracting your logic/network layer is extremely easy with Python and Twisted.